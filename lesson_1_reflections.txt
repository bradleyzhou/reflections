How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    The diff will highlight any modified/different lines between the two versions,
    making those differences as well as potential bugs accompanying the changes
    more obvious to the human eye.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Knowledge accumulation. You can easily look up what works under which conditions.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Human decisions, both good and bad. The commits are best separated logically,
    which requires human intervention. On the other hand, humans can make bad choices,
    which may render the commits too small or too big.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    User senarios. Other VCS users mostly work on separate, unralated files.

How can you use the commands git log and git diff to view the history of files?

    Scroll with up/down arrow keys after git log, found the version by reviewing
    and searching. Press q to quit the log, git diff the version ids. 

How might using version control make you more confident to make changes that
could break something?

    I can alway go back and forth in 'history' among different commits, safely and
    quickly.

Now that you have your workspace set up, what do you want to try using Git for?

    For my learning on writing programs.
